name: Blazium Cerebro Get Run Build Data
description: Fetches build data for a specific run after deployment or setup completion.

inputs:
  name:
    description: The name of the build.
    required: true
  cerebro_url:
    description: The base URL of the Cerebro server.
    required: true
  cerebro_auth:
    description: The authorization key for Cerebro.
    required: true
  run_id:
    description: The ID of the run to retrieve.
    required: true

outputs:
  build_data:
    description: The build data object returned from Cerebro.
    value: ${{ steps.fetch_build.outputs.build_data }}

runs:
  using: "composite"
  steps:
    - name: Fetch Build Data
      id: fetch_build
      shell: bash
      run: |
        RESPONSE=$(curl -s -X GET "${{ inputs.cerebro_url }}/api/v1/enginebuilds/${{ inputs.run_id }}/${{ inputs.name }}" \
          -H "Content-Type: application/json" \
          -H "BLAZIUM_AUTH: ${{ inputs.cerebro_auth }}")

        echo "## Fetching Build Data" >> $GITHUB_STEP_SUMMARY
        echo "Run ID: ${{ inputs.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "Build Name: ${{ inputs.name }}" >> $GITHUB_STEP_SUMMARY

        # Check if the request succeeded
        if [[ $(echo "$RESPONSE" | jq -r '.success') != "true" ]]; then
          echo "Error: Failed to fetch build data. Response:\n $RESPONSE" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

        # Extract the 'data' object
        DATA=$(echo "$RESPONSE" | jq -r '.data')
        if [ -z "$DATA" ] || [ "$DATA" == "null" ]; then
          echo "Error: 'data' object is missing in the response." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

        # Output the data object
        echo "Build data retrieved successfully." >> $GITHUB_STEP_SUMMARY
        echo "build_data=$DATA" >> $GITHUB_OUTPUT

name: 🔗 GHA
on:
  repository_dispatch:
    types: [trigger_build]
env:
  BASE_NAME: Blazium_v
  GODOT_BASE_BRANCH: blazium-dev

concurrency:
  group: ci-${{ github.actor }}-${{ github.event.client_payload.type || 'nightly' }}-runner
  cancel-in-progress: true

jobs:

  get-latest-sha:
    name: 🔍 Get Latest SHA
    runs-on: ubuntu-latest
    outputs:
      build_sha: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: blazium-engine/blazium
          ref: ${{ github.event.client_payload.branch || env.GODOT_BASE_BRANCH }}
          fetch-depth: 1
      - name: Get Latest Commit SHA
        id: get_sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

  static-checks:
    name: 📊 Static checks
    needs: get-latest-sha
    uses: ./.github/workflows/static_checks.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  web-build:
    name: 🌐 Web
    needs: [get-latest-sha, static-checks]
    if: ${{ github.event.client_payload.web_build == true }}
    uses: ./.github/workflows/web_builds.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  monoglue-build:
    name: Mono Glue
    needs: [get-latest-sha, static-checks]
    if: ${{ github.event.client_payload.monoglue_build == true }}
    uses: ./.github/workflows/mono_glue_build.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  android-build:
    name: 🤖 Android
    needs: [get-latest-sha, static-checks, monoglue-build]
    if: ${{ github.event.client_payload.android_build == true }}
    uses: ./.github/workflows/android_builds.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  ios-build:
    name: 🍏 iOS
    needs: [get-latest-sha, static-checks, monoglue-build]
    if: ${{ github.event.client_payload.ios_build == true }}
    uses: ./.github/workflows/ios_builds.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  linux-build:
    name: 🐧 Linux
    needs: [get-latest-sha, static-checks, monoglue-build]
    if: ${{ github.event.client_payload.linux_build == true }}
    uses: ./.github/workflows/linux_builds.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  macos-build:
    name: 🍎 macOS
    needs: [get-latest-sha, static-checks, monoglue-build]
    if: ${{ github.event.client_payload.macos_build == true }}
    uses: ./.github/workflows/macos_builds.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  windows-build:
    name: 🏁 Windows
    needs: [get-latest-sha, static-checks, monoglue-build]
    if: ${{ github.event.client_payload.windows_build == true }}
    uses: ./.github/workflows/windows_builds.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  deploy:
    name: Deploy
    needs: [get-latest-sha, static-checks, monoglue-build, windows-build, macos-build, linux-build, android-build, ios-build]
    if: success()
    uses: ./.github/workflows/deploy_all.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

  cleanup:
    name: Clean Up
    needs: [get-latest-sha, static-checks, monoglue-build, windows-build, macos-build, linux-build, android-build, ios-build]
    if: failure() || cancelled()
    uses: ./.github/workflows/clean_up.yml
    secrets: inherit
    with:
      build_sha: ${{ needs.get-latest-sha.outputs.build_sha }}
      runner_id: ${{ github.run_id }}

name: Template Deploy
on:
  workflow_call:
    inputs:
      build_sha:
        description: "Build commit SHA to use for this job"
        required: true
        type: string
      runner_id:
        description: "Runner ID of the Parent Runner"
        required: true
        type: string
# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: blazium-dev

concurrency:
  group: ci-${{github.actor}}-${{ github.event.client_payload.type || 'nightly' }}-template-deploy
  cancel-in-progress: true

jobs:
  build-monoglue:
    runs-on: "ubuntu-20.04"
    name: Example for Template Deploy
    steps:

      - name: Download No. 1 File
        id: download-1
        uses: ./.github/actions/cerebro-download-build
        with:
          name: linux-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
          run_id: ${{ inputs.runner_id }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
          folder: ${{ github.workspace }}/downloads

      - name: Uncompress File and List Contents
        shell: bash
        run: |
          # Extract file path from the previous step
          FILE_PATH="${{ steps.download-1.outputs.file_path }}"
          if [ -z "$FILE_PATH" ]; then
            echo "Error: No file path output from the previous step." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          echo "File path retrieved: $FILE_PATH" >> $GITHUB_STEP_SUMMARY

          # Extract file name without extension and prepare the target folder
          FILE_NAME=$(basename "$FILE_PATH")
          FOLDER_NAME="${FILE_NAME%.tar.gz}"
          TARGET_FOLDER="${{ github.workspace }}/downloads/$FOLDER_NAME"

          echo "File name: $FILE_NAME" >> $GITHUB_STEP_SUMMARY
          echo "Target folder: $TARGET_FOLDER" >> $GITHUB_STEP_SUMMARY

          echo "Uncompressing $FILE_PATH into $TARGET_FOLDER" >> $GITHUB_STEP_SUMMARY
          mkdir -p "$TARGET_FOLDER"

          # Uncompress the tar.gz file
          if tar -xzvf "$FILE_PATH" -C "$TARGET_FOLDER" >> $GITHUB_STEP_SUMMARY 2>&1; then
            echo "Successfully uncompressed $FILE_PATH" >> $GITHUB_STEP_SUMMARY
          else
            echo "Error: Failed to uncompress $FILE_PATH" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          # List the contents of the extracted folder
          echo "Contents of $TARGET_FOLDER:" >> $GITHUB_STEP_SUMMARY
          ls -la "$TARGET_FOLDER" >> $GITHUB_STEP_SUMMARY

      - name: Download No. 2 File
        id: download-2
        uses: ./.github/actions/cerebro-download-build
        with:
          name: linux-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
          run_id: ${{ inputs.runner_id }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
          folder: ${{ github.workspace }}/downloads

      - name: Download No. 3 File
        id: download-3
        uses: ./.github/actions/cerebro-download-build
        with:
          name: linux-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
          run_id: ${{ inputs.runner_id }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
          folder: ${{ github.workspace }}/downloads

      - name: Download No. 4 File
        id: download-4
        uses: ./.github/actions/cerebro-download-build
        with:
          name: linux-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
          run_id: ${{ inputs.runner_id }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
          folder: ${{ github.workspace }}/downloads

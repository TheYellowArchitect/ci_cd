name: Template Deploy
on:
  workflow_call:
    inputs:
      build_sha:
        description: "Build commit SHA to use for this job"
        required: true
        type: string
      runner_id:
        description: "Runner ID of the Parent Runner"
        required: true
        type: string
      new_version:
        description: "New Version that'll be Deployed"
        required: true
        type: string
# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: blazium-dev
  BASE_NAME: Blazium_v

concurrency:
  group: ci-${{github.actor}}-${{ github.event.client_payload.type || 'nightly' }}-template-deploy
  cancel-in-progress: true

jobs:
  build-monoglue:
    runs-on: "ubuntu-20.04"
    name: Example for Template Deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: blazium-engine/ci_cd
          submodules: recursive

      # - name: Download No. 1 File
      #   id: download-1
      #   uses: ./.github/actions/cerebro-download-build
      #   with:
      #     name: linux-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
      #     run_id: ${{ inputs.runner_id }}
      #     cerebro_url: ${{ secrets.CEREBRO_URL }}
      #     cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
      #     folder: ${{ github.workspace }}/downloads

      - name: Download All Template Files
        uses: ./.github/actions/cerebro-download-multi-build
        with:
          names: |
            linux-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-template-${{ github.event.client_payload.type || 'nightly' }}
            web-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-dlink-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-dlink-template-${{ github.event.client_payload.type || 'nightly' }}
            web-dlink-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-dlink-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            macos-template-${{ github.event.client_payload.type || 'nightly' }}
            macos-template-mono-${{ github.event.client_payload.type || 'nightly' }}
            ios-template-${{ github.event.client_payload.type || 'nightly' }}
            ios-template-mono-${{ github.event.client_payload.type || 'nightly' }}
          run_id: ${{ inputs.runner_id }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
          folder: ${{ github.workspace }}/downloads

      - name: Uncompress Templates
        uses: ./.github/actions/multi-uncompress-tar-gz
        with:
          names: |
            linux-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-template-${{ github.event.client_payload.type || 'nightly' }}
            web-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-dlink-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-dlink-template-${{ github.event.client_payload.type || 'nightly' }}
            web-dlink-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-dlink-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            macos-template-${{ github.event.client_payload.type || 'nightly' }}
            macos-template-mono-${{ github.event.client_payload.type || 'nightly' }}
            ios-template-${{ github.event.client_payload.type || 'nightly' }}
            ios-template-mono-${{ github.event.client_payload.type || 'nightly' }}
          input_dir: ${{ github.workspace }}/downloads
          output_dir: ${{ github.workspace }}/extracted

      - name: Copy & Rename Web Templates
        uses: ./.github/actions/multi-copy-rename
        with:
          names: |
            web-template-${{ github.event.client_payload.type || 'nightly' }}
            web-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-dlink-template-${{ github.event.client_payload.type || 'nightly' }}
            web-dlink-debug-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-dlink-template-${{ github.event.client_payload.type || 'nightly' }}
            web-nothreads-dlink-debug-template-${{ github.event.client_payload.type || 'nightly' }}
          filename_old: |
            blazium.web.template_release.wasm32.zip
            blazium.web.template_debug.wasm32.zip
            blazium.web.template_release.wasm32.nothreads.zip
            blazium.template_debug.wasm32.nothreads.zip
            blazium.web.template_release.wasm32.dlink.zip
            blazium.web.template_debug.wasm32.dlink.zip
            blazium.web.template_release.wasm32.nothreads.dlink.zip
            blazium.web.template_debug.wasm32.nothreads.dlink.zip
          filename_new: |
            web_release.zip
            web_debug.zip
            web_nothreads_release.zip
            web_nothreads_debug.zip
            web_dlink_release.zip
            web_dlink_debug.zip
            web_dlink_nothreads_release.zip
            web_dlink_nothreads_debug.zip
          input_dir: ${{ github.workspace }}/extracted
          output_dir: ${{ github.workspace }}/templates

      - name: Copy & Rename Windows Templates
        uses: ./.github/actions/multi-copy-rename
        with:
          names: |
            windows-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
          filename_old: |
            blazium.windows.template_release.x86_64.exe
            blazium.windows.template_debug.x86_64.exe
            blazium.windows.template_release.x86_32.exe
            blazium.windows.template_debug.x86_32.exe
            blazium.windows.template_release.x86_64.console.exe
            blazium.windows.template_debug.x86_64.console.exe
            blazium.windows.template_release.x86_32.console.exe
            blazium.windows.template_debug.x86_32.console.exe
          filename_new: |
            windows_release_x86_64.exe
            windows_debug_x86_64.exe
            windows_release_x86_32.exe
            windows_debug_x86_32.exe
            windows_release_x86_64_console.exe
            windows_debug_x86_64_console.exe
            windows_release_x86_32_console.exe
            windows_debug_x86_32_console.exe
          input_dir: ${{ github.workspace }}/extracted
          output_dir: ${{ github.workspace }}/templates

      - name: Copy & Rename Windows Templates (mono)
        uses: ./.github/actions/multi-copy-rename
        with:
          names: |
            windows-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
          filename_old: |
            blazium.windows.template_release.x86_64.mono.exe
            blazium.windows.template_debug.x86_64.mono.exe
            blazium.windows.template_release.x86_32.mono.exe
            blazium.windows.template_debug.x86_32.mono.exe
            blazium.windows.template_release.x86_64.mono.console.exe
            blazium.windows.template_debug.x86_64.mono.console.exe
            blazium.windows.template_release.x86_32.mono.console.exe
            blazium.windows.template_debug.x86_32.mono.console.exe
          filename_new: |
            windows_release_x86_64.exe
            windows_debug_x86_64.exe
            windows_release_x86_32.exe
            windows_debug_x86_32.exe
            windows_release_x86_64_console.exe
            windows_debug_x86_64_console.exe
            windows_release_x86_32_console.exe
            windows_debug_x86_32_console.exe
          input_dir: ${{ github.workspace }}/extracted
          output_dir: ${{ github.workspace }}/templates/mono

      - name: Copy & Rename Linux Templates
        uses: ./.github/actions/multi-copy-rename
        with:
          names: |
            linux-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-32bit-${{ github.event.client_payload.type || 'nightly' }}
          filename_old: |
            blazium.linuxbsd.template_release.x86_64
            blazium.linuxbsd.template_debug.x86_64
            blazium.linuxbsd.template_release.x86_32
            blazium.linuxbsd.template_debug.x86_32
          filename_new: |
            linux_release.x86_64
            linux_debug.x86_64
            linux_release.x86_32
            linux_debug.x86_32
          input_dir: ${{ github.workspace }}/extracted
          output_dir: ${{ github.workspace }}/templates

      - name: Copy & Rename Linux Templates (mono)
        uses: ./.github/actions/multi-copy-rename
        with:
          names: |
            linux-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-debug-template-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
          filename_old: |
            blazium.linuxbsd.template_release.x86_64.mono
            blazium.linuxbsd.template_debug.x86_64.mono
            blazium.linuxbsd.template_release.x86_32.mono
            blazium.linuxbsd.template_debug.x86_32.mono
          filename_new: |
            linux_release.x86_64
            linux_debug.x86_64
            linux_release.x86_32
            linux_debug.x86_32
          input_dir: ${{ github.workspace }}/extracted
          output_dir: ${{ github.workspace }}/templates/mono

      - name: List Templates Directory
        shell: bash
        run: |
          if [ -d "${GITHUB_WORKSPACE}/templates" ]; then
            echo "Contents of the templates directory:" >> $GITHUB_STEP_SUMMARY
            echo "$(ls -la "${GITHUB_WORKSPACE}/templates")" >> $GITHUB_STEP_SUMMARY
          else
            echo "Directory ${GITHUB_WORKSPACE}/templates does not exist." >> $GITHUB_STEP_SUMMARY
          fi

      - name: List Templates/Mono Directory
        shell: bash
        run: |
          if [ -d "${GITHUB_WORKSPACE}/templates/mono" ]; then
            echo "Contents of the templates/mono directory:" >> $GITHUB_STEP_SUMMARY
            echo "$(ls -la "${GITHUB_WORKSPACE}/templates/mono")" >> $GITHUB_STEP_SUMMARY
          else
            echo "Directory ${GITHUB_WORKSPACE}/templates/mono does not exist." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Generate Checksums for Templates
        uses: ./.github/actions/checksum-txt-generator
        with:
          directory: ${{ github.workspace }}/templates

      - name: Generate Checksums for Mono Templates
        uses: ./.github/actions/checksum-txt-generator
        with:
          directory: ${{ github.workspace }}/templates/mono

      - name: Write New Version to File
        shell: bash
        run: |
          # Define the target folder and file
          TARGET_DIR="${GITHUB_WORKSPACE}/templates"
          TARGET_FILE="${TARGET_DIR}/version.txt"

          # Ensure the target directory exists
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Creating directory: $TARGET_DIR"
            mkdir -p "$TARGET_DIR"
          fi

          # Write the new version to the file
          echo "${{ inputs.new_version }}.${{ github.event.client_payload.type || 'nightly' }}" > "$TARGET_FILE"

          # Log the action
          echo "New version written to $TARGET_FILE:" >> $GITHUB_STEP_SUMMARY
          cat "$TARGET_FILE" >> $GITHUB_STEP_SUMMARY

      - name: Write New Mono Version to File
        shell: bash
        run: |
          # Define the target folder and file
          TARGET_DIR="${GITHUB_WORKSPACE}/templates/mono"
          TARGET_FILE="${TARGET_DIR}/version.txt"

          # Ensure the target directory exists
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Creating directory: $TARGET_DIR"
            mkdir -p "$TARGET_DIR"
          fi

          # Write the new version to the file
          echo "${{ inputs.new_version }}.${{ github.event.client_payload.type || 'nightly' }}.mono" > "$TARGET_FILE"

          # Log the action
          echo "New version written to $TARGET_FILE:" >> $GITHUB_STEP_SUMMARY
          cat "$TARGET_FILE" >> $GITHUB_STEP_SUMMARY

      - name: Compress Templates/Mono Directory
        shell: bash
        run: |
          # Define variables
          TARGET_DIR="${GITHUB_WORKSPACE}/templates/mono"
          RELDIR="${GITHUB_WORKSPACE}/export"
          ZIP_FILE="${RELDIR}/${BASE_NAME}${{ inputs.new_version }}_mono_export_templates.tpz"

          # Ensure the target directory exists
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Error: Target directory $TARGET_DIR does not exist."
            exit 1
          fi

          # Ensure the output directory exists
          if [ ! -d "$RELDIR" ]; then
            echo "Creating output directory: $RELDIR"
            mkdir -p "$RELDIR"
          fi

          # Create the zip file
          (cd "$TARGET_DIR" && zip -q -9 -r -D "$ZIP_FILE" .)

          # Log the result
          if [ $? -eq 0 ]; then
            echo "Zip file created successfully: $ZIP_FILE" >> $GITHUB_STEP_SUMMARY
          else
            echo "Error: Failed to create the zip file." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
      - name: Delete Templates/Mono Directory
        shell: bash
        run: |
          TARGET_DIR="${GITHUB_WORKSPACE}/templates/mono"
          rm -rf $TARGET_DIR
          
      - name: Compress Templates Directory
        shell: bash
        run: |
          # Define variables
          TARGET_DIR="${GITHUB_WORKSPACE}/templates"
          RELDIR="${GITHUB_WORKSPACE}/export"
          ZIP_FILE="${RELDIR}/${BASE_NAME}${{ inputs.new_version }}_export_templates.tpz"

          # Ensure the target directory exists
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Error: Target directory $TARGET_DIR does not exist."
            exit 1
          fi

          # Ensure the output directory exists
          if [ ! -d "$RELDIR" ]; then
            echo "Creating output directory: $RELDIR"
            mkdir -p "$RELDIR"
          fi

          # Create the zip file
          (cd "$TARGET_DIR" && zip -q -9 -r -D "$ZIP_FILE" .)

          # Log the result
          if [ $? -eq 0 ]; then
            echo "Zip file created successfully: $ZIP_FILE" >> $GITHUB_STEP_SUMMARY
          else
            echo "Error: Failed to create the zip file." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Generate Checksums for Packaged Templates
        uses: ./.github/actions/checksum-txt-generator
        with:
          directory: ${{ github.workspace }}/export

      - name: Generate JSON with File Info and Checksums
        shell: bash
        env:
          BASE_NAME: Blazium_v
          URL_BASE: ${{ secrets.CDN_URL }}/${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}
        run: |
          # Define file paths and output file
          TARGET_DIR="${GITHUB_WORKSPACE}/export"
          BASE_FILE="${TARGET_DIR}/${BASE_NAME}${{ inputs.new_version }}_export_templates.tpz"
          MONO_FILE="${TARGET_DIR}/${BASE_NAME}${{ inputs.new_version }}_mono_export_templates.tpz"
          OUTPUT_FILE="${TARGET_DIR}/details.json"

          # Ensure files exist
          if [ ! -f "$BASE_FILE" ]; then
            echo "Error: File $BASE_FILE does not exist."
            exit 1
          fi
          if [ ! -f "$MONO_FILE" ]; then
            echo "Error: File $MONO_FILE does not exist."
            exit 1
          fi

          # Compute SHA-512 checksums
          BASE_512_CHECKSUM=$(sha512sum "$BASE_FILE" | awk '{print $1}')
          MONO_512_CHECKSUM=$(sha512sum "$MONO_FILE" | awk '{print $1}')
          BASE_256_CHECKSUM=$(sha256sum "$BASE_FILE" | awk '{print $1}')
          MONO_256_CHECKSUM=$(sha256sum "$MONO_FILE" | awk '{print $1}')

          # Get File Sizes due to Content-Length issues on CDN
          BASE_FILE_SIZE=$(stat -f%z "$BASE_FILE")
          MONO_FILE_SIZE=$(stat -f%z "$MONO_FILE")

          # Generate timestamps
          BASE_TIMESTAMP=$(date -r "$BASE_FILE" +"%d %B %Y")
          MONO_TIMESTAMP=$(date -r "$MONO_FILE" +"%d %B %Y")

          # Generate JSON object with jq
          jq -n \
            --arg base_filename "$(basename "$BASE_FILE")" \
            --arg base_256_checksum "$BASE_256_CHECKSUM" \
            --arg base_512_checksum "$BASE_512_CHECKSUM" \
            --arg base_url "${URL_BASE}/$(basename "$BASE_FILE")" \
            --arg base_timestamp "$BASE_TIMESTAMP" \
            --arg base_filesize "$BASE_FILE_SIZE" \
            --arg mono_filename "$(basename "$MONO_FILE")" \
            --arg mono_256_checksum "$MONO_256_CHECKSUM" \
            --arg mono_512_checksum "$MONO_512_CHECKSUM" \
            --arg mono_url "${URL_BASE}/$(basename "$MONO_FILE")" \
            --arg mono_timestamp "$MONO_TIMESTAMP" \
            --arg mono_filesize "$MONO_FILE_SIZE" \
            '{
              base: {
                name: "Official Blazium Templates Mirror",
                filename: $base_filename,
                filesize: $base_filesize,
                checksum: {
                  "512": $base_512_checksum,
                  "256": $base_256_checksum
                },
                url: $base_url,
                timestamp: $base_timestamp
              },
              mono: {
                name: "Official Blazium Mono Templates Mirror",
                filename: $mono_filename,
                filesize: $mono_filesize,
                checksum: {
                  "512": $mono_512_checksum,
                  "256": $base_256_checksum
                },
                url: $mono_url,
                timestamp: $mono_timestamp
              }
            }' > "$OUTPUT_FILE"

          # Log the generated JSON
          echo "Generated JSON file: $OUTPUT_FILE" >> $GITHUB_STEP_SUMMARY
          echo "Contents:" >> $GITHUB_STEP_SUMMARY
          cat "$OUTPUT_FILE" >> $GITHUB_STEP_SUMMARY


      - uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: export/${{ env.BASE_NAME }}${{ inputs.new_version }}_export_templates.tpz
          out_dir: ${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}

      - uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: export/${{ env.BASE_NAME }}${{ inputs.new_version }}_mono_export_templates.tpz
          out_dir: ${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}

      - uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: export/checksum.txt
          out_dir: ${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}

      - uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: export/details.json
          out_dir: ${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}



      # - name: Uncompress File
      #   id: new-folder
      #   uses: ./.github/actions/uncompress-tar-gz
      #   with:
      #     file_path: ${{ steps.download-1.outputs.file_path }}
      #     output_dir: ${{ github.workspace }}/extracted

      # - name: Update File
      #   shell: bash
      #   run: |
      #     # Extract file path from the previous step
      #     CUR_FOLDER="${{ steps.new-folder.outputs.target_folder }}"
      #     NEW_FOLDER="${{ github.workspace }}/templates"
      #     CUR_FILE="blazium.linuxbsd.template_release.x86_64"
      #     NEW_FILE="linux_release.x86_64"

      #     mkdir -r $NEW_FOLDER
      #     cp $CUR_FOLDER/$CUR_FILE $NEW_FOLDER/$NEW_FILE
